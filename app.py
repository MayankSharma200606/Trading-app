{"cells":[{"cell_type":"code","source":"import streamlit as st\nimport pandas as pd\nimport time\n\n# --- PAGE CONFIGURATION ---\n# Set the layout to wide, give it a title and an icon.\nst.set_page_config(\n    page_title=\"AlgoTrader Pro\",\n    page_icon=\"ðŸ“ˆ\",\n    layout=\"wide\",\n    initial_sidebar_state=\"expanded\"\n)\n\n# --- CUSTOM STYLING ---\n# Inject custom CSS to make the app look more like a professional trading platform.\n# This includes a dark theme, specific fonts, and styled widgets.\nst.markdown(\"\"\"\n<style>\n    /* Main app styling */\n    .main {\n        background-color: #0E1117;\n        color: #FAFAFA;\n    }\n    /* Sidebar styling */\n    .st-emotion-cache-16txtl3 {\n        background-color: #161A25;\n    }\n    /* Metric cards styling */\n    .st-emotion-cache-1r6slb0 {\n        border: 1px solid #262730;\n        border-radius: 0.5rem;\n        padding: 1rem;\n        background-color: #161A25;\n    }\n    /* Chart styling */\n    .stPlotlyChart {\n        border-radius: 0.5rem;\n    }\n    /* Buttons styling */\n    .stButton>button {\n        border-radius: 0.5rem;\n        background-color: #0066CC;\n        color: white;\n        border: none;\n    }\n    .stButton>button:hover {\n        background-color: #0052A3;\n    }\n</style>\n\"\"\", unsafe_allow_html=True)\n\n\n# --- DATA LOADING & CACHING ---\n# Cache the data loading to improve performance.\n# The app will only reload the data if the file changes.\n@st.cache_data\ndef load_data(file_path):\n    \"\"\"\n    Loads stock data from a CSV file into a pandas DataFrame.\n    Sets the 'Date' column as the index.\n    \"\"\"\n    try:\n        df = pd.read_csv(file_path)\n        df['Date'] = pd.to_datetime(df['Date'])\n        df.set_index('Date', inplace=True)\n        return df\n    except FileNotFoundError:\n        st.error(f\"Error: The file {file_path} was not found. Please make sure it's in the correct directory.\")\n        return None\n\n# Load the data into session state to be accessible across pages.\nif 'data' not in st.session_state:\n    data = load_data('MOCK_DATA.csv')\n    if data is not None:\n        st.session_state.data = data\n    else:\n        # Stop the app if data loading fails\n        st.stop()\n\n# --- SIDEBAR NAVIGATION & CONTENT ---\nst.sidebar.title(\"AlgoTrader Pro\")\nst.sidebar.write(\"Welcome to your personal trading dashboard.\")\n\n# --- Live Market Clock ---\nst.sidebar.subheader(\"Market Clock\")\nclock_placeholder = st.sidebar.empty()\n\n# --- Main Page Content ---\n# This is the landing page content before navigating to other pages.\nst.title(\"Welcome to AlgoTrader Pro\")\nst.write(\"\"\"\nThis platform is your all-in-one solution for developing, backtesting, and simulating algorithmic trading strategies.\nNavigate through the pages using the sidebar to access different tools.\n\"\"\")\nst.info(\"Please select a page from the sidebar to get started.\", icon=\"ðŸ‘ˆ\")\n\n\n# --- DYNAMIC ELEMENTS ---\n# This loop keeps the clock in the sidebar updated.\nwhile True:\n    current_time = time.strftime(\"%H:%M:%S\")\n    clock_placeholder.metric(\"Current Time (UTC)\", current_time)\n    time.sleep(1)","outputs":[],"execution_count":null,"metadata":{}}],"metadata":{"colab":{"from_bard":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}